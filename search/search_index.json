{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Map of Zones Docs Map of Zones is a visualizer that displays a galaxy of the interconnected networks built on cosmos-SDK with IBC module. It connects to public RPCs provided by individual networks and parses all of the IBC-transactions that have token transfers in it. Map of Zones website: mapofzones.com Map of Zones github: github.com/mapofzones Map of Zones boards: toil.kitemaker.co/Xt6aks-bitquasar","title":"Getting started"},{"location":"#welcome-to-map-of-zones-docs","text":"Map of Zones is a visualizer that displays a galaxy of the interconnected networks built on cosmos-SDK with IBC module. It connects to public RPCs provided by individual networks and parses all of the IBC-transactions that have token transfers in it. Map of Zones website: mapofzones.com Map of Zones github: github.com/mapofzones Map of Zones boards: toil.kitemaker.co/Xt6aks-bitquasar","title":"Welcome to Map of Zones Docs"},{"location":"adaptor/","text":"Adaptor The statistics adaptor updates statistics in flat tables , by default every 10 seconds + runtime. The adaptor makes a query in PL/pgSQL functions and tables , and then updates the values in flat tables with the received data.","title":"Stats adaptor"},{"location":"adaptor/#adaptor","text":"The statistics adaptor updates statistics in flat tables , by default every 10 seconds + runtime. The adaptor makes a query in PL/pgSQL functions and tables , and then updates the values in flat tables with the received data.","title":"Adaptor"},{"location":"architecture/","text":"Architecture","title":"Architecture"},{"location":"architecture/#architecture","text":"","title":"Architecture"},{"location":"broker/","text":"Message broker By default, the project uses the RabbitMQ message broker with one queue. All watchers write data to it, and the processor/processors take data from the queue in portions. If there are multiple processors, a separate queue must be created for each processor.","title":"Message broker"},{"location":"broker/#message-broker","text":"By default, the project uses the RabbitMQ message broker with one queue. All watchers write data to it, and the processor/processors take data from the queue in portions. If there are multiple processors, a separate queue must be created for each processor.","title":"Message broker"},{"location":"changelog/","text":"Changelog","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"ci%26cd%26cd/","text":"CI/CD/CD To put it simply continuous integration is part of both continuous delivery and continuous deployment. And continuous deployment is like continuous delivery, except that releases happen automatically. ArgoCD architecture API Server The API server is a gRPC/REST server which exposes the API consumed by the Web UI, CLI, and CI/CD systems. It has the following responsibilities: application management and status reporting invoking of application operations (e.g. sync, rollback, user-defined actions) repository and cluster credential management (stored as K8s secrets) authentication and auth delegation to external identity providers RBAC enforcement listener/forwarder for Git webhook events Repository Server The repository server is an internal service which maintains a local cache of the Git repository holding the application manifests. It is responsible for generating and returning the Kubernetes manifests when provided the following inputs: repository URL revision (commit, tag, branch) application path template specific settings: parameters, ksonnet environments, helm values.yaml Application Controller The application controller is a Kubernetes controller which continuously monitors running applications and compares the current, live state against the desired target state (as specified in the repo). It detects OutOfSync application state and optionally takes corrective action. It is responsible for invoking any user-defined hooks for lifecycle events (PreSync, Sync, PostSync) Continuous Integration Developers merge their changes back to the main branch as often as possible. The developer's changes are validated by creating a build and running automated tests against the build. By doing so, you avoid integration challenges that can happen when waiting for release day to merge changes into the release branch. Continuous integration puts a great emphasis on testing automation to check that the application is not broken whenever new commits are integrated into the main branch. Continuous integration has several main stages: When changes are pushed to the master branch of the repositories at github.com/mapofzones , GitHub Actions are triggered. GitHub Actions builds, tests, creates docker images and publishes them in our container registry on DigitalOcean - registry.digitalocean.com/mapofzones . After completing the job, GitHub Actions sends a notification to the telegram chat about the success or failure of the execution. GitHub Actions workflow settings are described in each repository in the .github/workflows directory. Each GitHub repository has secret keys for publishing images, for sending messages to telegrams, etc. Continuous Delivery Continuous delivery is an extension of continuous integration since it automatically deploys all code changes to a testing and/or production environment after the build stage. This means that on top of automated testing, you have an automated release process and you can deploy your application any time by clicking a button or automatically. Our continuous delivery uses argoCD and keeps track of the \"dev\" directory in the \"deploy\" repository. The development application configuration for argoCD is located at deploy/dev/app.yaml . Any changes made to the dev directory of the deploy repository will be reflected on the development server. Continuous Deployment Continuous deployment goes one step further than continuous delivery. With this practice, every change that passes all stages of your production pipeline is released to your product. Our continuous deployment uses argoCD and keeps track of the \"prod\" directory in the \"deploy\" repository. The production application configuration for argoCD is located at deploy/prod/app.yaml . Any changes made to the prod directory of the deploy repository will be reflected on the production server, but unlike development server for added security, automatic initialization of synchronization is disabled on the production server. This means that to start a new synchronization, you need to click on the \"SYNC\" button in the argoCD client, or do it through the console.","title":"CI/CD/CD"},{"location":"ci%26cd%26cd/#cicdcd","text":"To put it simply continuous integration is part of both continuous delivery and continuous deployment. And continuous deployment is like continuous delivery, except that releases happen automatically.","title":"CI/CD/CD"},{"location":"ci%26cd%26cd/#argocd-architecture","text":"","title":"ArgoCD architecture"},{"location":"ci%26cd%26cd/#api-server","text":"The API server is a gRPC/REST server which exposes the API consumed by the Web UI, CLI, and CI/CD systems. It has the following responsibilities: application management and status reporting invoking of application operations (e.g. sync, rollback, user-defined actions) repository and cluster credential management (stored as K8s secrets) authentication and auth delegation to external identity providers RBAC enforcement listener/forwarder for Git webhook events","title":"API Server"},{"location":"ci%26cd%26cd/#repository-server","text":"The repository server is an internal service which maintains a local cache of the Git repository holding the application manifests. It is responsible for generating and returning the Kubernetes manifests when provided the following inputs: repository URL revision (commit, tag, branch) application path template specific settings: parameters, ksonnet environments, helm values.yaml","title":"Repository Server"},{"location":"ci%26cd%26cd/#application-controller","text":"The application controller is a Kubernetes controller which continuously monitors running applications and compares the current, live state against the desired target state (as specified in the repo). It detects OutOfSync application state and optionally takes corrective action. It is responsible for invoking any user-defined hooks for lifecycle events (PreSync, Sync, PostSync)","title":"Application Controller"},{"location":"ci%26cd%26cd/#continuous-integration","text":"Developers merge their changes back to the main branch as often as possible. The developer's changes are validated by creating a build and running automated tests against the build. By doing so, you avoid integration challenges that can happen when waiting for release day to merge changes into the release branch. Continuous integration puts a great emphasis on testing automation to check that the application is not broken whenever new commits are integrated into the main branch. Continuous integration has several main stages: When changes are pushed to the master branch of the repositories at github.com/mapofzones , GitHub Actions are triggered. GitHub Actions builds, tests, creates docker images and publishes them in our container registry on DigitalOcean - registry.digitalocean.com/mapofzones . After completing the job, GitHub Actions sends a notification to the telegram chat about the success or failure of the execution. GitHub Actions workflow settings are described in each repository in the .github/workflows directory. Each GitHub repository has secret keys for publishing images, for sending messages to telegrams, etc.","title":"Continuous Integration"},{"location":"ci%26cd%26cd/#continuous-delivery","text":"Continuous delivery is an extension of continuous integration since it automatically deploys all code changes to a testing and/or production environment after the build stage. This means that on top of automated testing, you have an automated release process and you can deploy your application any time by clicking a button or automatically. Our continuous delivery uses argoCD and keeps track of the \"dev\" directory in the \"deploy\" repository. The development application configuration for argoCD is located at deploy/dev/app.yaml . Any changes made to the dev directory of the deploy repository will be reflected on the development server.","title":"Continuous Delivery"},{"location":"ci%26cd%26cd/#continuous-deployment","text":"Continuous deployment goes one step further than continuous delivery. With this practice, every change that passes all stages of your production pipeline is released to your product. Our continuous deployment uses argoCD and keeps track of the \"prod\" directory in the \"deploy\" repository. The production application configuration for argoCD is located at deploy/prod/app.yaml . Any changes made to the prod directory of the deploy repository will be reflected on the production server, but unlike development server for added security, automatic initialization of synchronization is disabled on the production server. This means that to start a new synchronization, you need to click on the \"SYNC\" button in the argoCD client, or do it through the console.","title":"Continuous Deployment"},{"location":"database/","text":"Database The database is the main part of the solution that stores the state of the solution. The database includes: Flat tables Core tables Temporary tables Functions Database migrations work using the Hasura GraphQL migrations engine. Flat tables Flat tables contain prepared flat data, ready to use, specifically for the front via hasura graphql . Core tables The core tables store the state of the main solution logic and primary statistics. Temporary tables Temporary tables are used only for the return set (RETURNS SETOF) in PL/pgSQL functions . Functions The functions are used to calculate statistics from core tables . The function is called by the statistical adapter . get_total_stats get_total_stats(period_in_hours integer, step_in_hours integer) RETURNS SETOF temp_t_total_stats Details of the temp_t_total_stats temporary table are here . get_full_stats_for_each_zone get_full_stats_for_each_zone(period_in_hours integer, step_in_hours integer) RETURNS SETOF temp_t_full_stats_for_each Details of the temp_t_full_stats_for_each temporary table are here .","title":"Database"},{"location":"database/#database","text":"The database is the main part of the solution that stores the state of the solution. The database includes: Flat tables Core tables Temporary tables Functions Database migrations work using the Hasura GraphQL migrations engine.","title":"Database"},{"location":"database/#flat-tables","text":"Flat tables contain prepared flat data, ready to use, specifically for the front via hasura graphql .","title":"Flat tables"},{"location":"database/#core-tables","text":"The core tables store the state of the main solution logic and primary statistics.","title":"Core tables"},{"location":"database/#temporary-tables","text":"Temporary tables are used only for the return set (RETURNS SETOF) in PL/pgSQL functions .","title":"Temporary tables"},{"location":"database/#functions","text":"The functions are used to calculate statistics from core tables . The function is called by the statistical adapter .","title":"Functions"},{"location":"database/#get_total_stats","text":"get_total_stats(period_in_hours integer, step_in_hours integer) RETURNS SETOF temp_t_total_stats Details of the temp_t_total_stats temporary table are here .","title":"get_total_stats"},{"location":"database/#get_full_stats_for_each_zone","text":"get_full_stats_for_each_zone(period_in_hours integer, step_in_hours integer) RETURNS SETOF temp_t_full_stats_for_each Details of the temp_t_full_stats_for_each temporary table are here .","title":"get_full_stats_for_each_zone"},{"location":"front/","text":"Front There are 3 main components: aggregated global data dashboard the map the rating table Dashboard It includes aggregated data of the: number of overall IBC token transfers across all of the chains number of zones (overall and active) number of channels (overall and active) the most active pair of zones according to the number of the IBC transfers they sent to each other Map Each zone is displayed as a circle with animated rays that represent active connection channels. We used different circle sizes to highlight zones that are more \u201dactive\u201d in terms of number of IBC token transfers or transactions (chosen column). Color coding is used to display zones\u2019 the ratio of incoming/outgoing IBC token transfer transactions. Map could be zoomed in and zones could be selected in order to interact with zones that are of a higher interest to you. Rating Table Rating table consist of 8 columns: a certain zone name number of IBC transfers a certain zone sent number of total TXs a certain zone sent IBC share (%) - number of TXs having IBC messages to the total number of transactions in a certain zone IBC out - sending tokens in IBC transfer IBC in - receiving tokens in IBC transfer number of channels IBC TXs activity chart","title":"Front"},{"location":"front/#front","text":"There are 3 main components: aggregated global data dashboard the map the rating table","title":"Front"},{"location":"front/#dashboard","text":"It includes aggregated data of the: number of overall IBC token transfers across all of the chains number of zones (overall and active) number of channels (overall and active) the most active pair of zones according to the number of the IBC transfers they sent to each other","title":"Dashboard"},{"location":"front/#map","text":"Each zone is displayed as a circle with animated rays that represent active connection channels. We used different circle sizes to highlight zones that are more \u201dactive\u201d in terms of number of IBC token transfers or transactions (chosen column). Color coding is used to display zones\u2019 the ratio of incoming/outgoing IBC token transfer transactions. Map could be zoomed in and zones could be selected in order to interact with zones that are of a higher interest to you.","title":"Map"},{"location":"front/#rating-table","text":"Rating table consist of 8 columns: a certain zone name number of IBC transfers a certain zone sent number of total TXs a certain zone sent IBC share (%) - number of TXs having IBC messages to the total number of transactions in a certain zone IBC out - sending tokens in IBC transfer IBC in - receiving tokens in IBC transfer number of channels IBC TXs activity chart","title":"Rating Table"},{"location":"graphql/","text":"GraphQL The Hasura GraphQL Engine provides GraphQL APIs over new or existing Postgres databases . API By default, the Hasura GraphQL API tracks all tables, but only flat tables are publicly accessible (no password required). Interacting with APIs during development is handy using the Hasura GraphQL explorer . By default, explorer is located here: localhost:8081/console/api-explorer . All tables of the database tracked by the GraphQL engine can be queried over the GraphQL endpoint. If you have a tracked table in your database, its query field is added as a nested field under the query_root root level type. By default, only flat tables are tracked. You can explore the entire schema and the available queries using the GraphiQL interface in the Hasura console or using GraphQL Schema Types . Queries GraphQL queries are used to fetch data from the server. Query request example: query MyQuery { headers(where: {timeframe: {_eq: 24}}) { channels_cnt_all channels_cnt_period timeframe top_zone_pair zones_cnt_all zones_cnt_period chart } } Query request example with curl: curl -i -H 'Content-Type: application/json' -X POST -d '{ \"query\": \"query MyQuery { headers(where: {timeframe: {_eq: 24}}) { channels_cnt_all channels_cnt_period timeframe top_zone_pair zones_cnt_all zones_cnt_period chart } }\" }' http://localhost:8081/v1/graphql Query response example with curl: HTTP/1.1 200 OK Transfer-Encoding: chunked Date: Sun, 29 Nov 2020 19:27:25 GMT Server: Warp/3.2.27 x-request-id: 03f7f31b-4290-4821-ac61-b569d3316e69 Content-Type: application/json; charset=utf-8 {\"data\":{\"headers\":[{\"channels_cnt_all\":292,\"channels_cnt_period\":0,\"timeframe\":24,\"top_zone_pair\":[],\"zones_cnt_all\":185,\"zones_cnt_period\":0,\"chart\":[{\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}]}]}} Subscriptions A GraphQL subscription is essentially a query where the client receives an update whenever the value of any field changes upstream. Subscriptions are supported for all kinds of queries. All the concepts of queries hold true for subscriptions as well. The Hasura GraphQL engine subscriptions are actually live queries, i.e. a subscription will return the latest result of the query being made and not necessarily all the individual events leading up to the result. By default updates are delivered to clients every 1 sec. This interval can be configured via the HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL env var. Subscription request example: subscription MySubscription { headers(where: {timeframe: {_eq: 24}}) { channels_cnt_all channels_cnt_period timeframe top_zone_pair zones_cnt_all zones_cnt_period chart } } Hasura GraphQL engine uses the GraphQL over WebSocket Protocol by the apollographql/subscriptions-transport-ws library for sending and receiving events. You can read more about the implementation of subscriptions in the architecture doc . Migrations The Hasura GraphQL migration engine is used to manage database migrations. Use the Hasura CLI to manage migration or use pre-built initial migrations when running Hasura (development only). \u0421reating migrations When working with the database through the hasura console , the changes will be exported to the migration and metadata directory where the hasura cli was initialized. See the CLI migtations for further adjustments and management of migrations. Initial migrations Initial migrations of the database and Hasura GraphQL metadata occur if the configuration has parameter values: HASURA_GRAPHQL_MIGRATIONS_DIR HASURA_GRAPHQL_METADATA_DIR If the values are set correctly, then all migrations located in the configured directories will be performed. Each database migration must be located in a separate directory <migration_number>_<migration_name> . Each such directory should contain up.sql for new changes and down.sql to revert to a previous state. CLI migrations All commands must be executed in the hasura directory or initialized a new directory, by default ./hasura directory. hasura init - Initialize directory for Hasura GraphQL Engine migrations, but you can use the existing hasura directory. You will need to specify the configuration in the config.yaml file. hasura migrate create baseline --from-server - Exports a snapshot of the current database schema named baseline to the migrations directory. hasura metadata export - Exports the entire hasura metadata schema. The uploaded data is placed in the metadata directory. hasura console --console-port 8083 - Runs hasura console on localhost:8083/console . hasura migrate create <name-of-migration> - Create sql and yaml files required for a migration. hasura migrate squash --name \"<feature-name>\" --from <migration-version> - Squash multiple migrations leading upto the latest one into a single migration file. hasura migrate apply --endpoint <server-endpoint> - Apply migrations on the database. hasura metadata apply --endpoint <server-endpoint> - Apply Hasura metadata on a database. hasura migrate status - Display current status of migrations on a database. Console It is very convenient to use Hasura console during development. Some of its parts are presented below. During production, it is not recommended to automatically enable the console along with hasura, but it is recommended to connect to hasura remotely by running the console locally. See examples in CLI migrations . Explorer Data schema Raw SQL","title":"GraphQL"},{"location":"graphql/#graphql","text":"The Hasura GraphQL Engine provides GraphQL APIs over new or existing Postgres databases .","title":"GraphQL"},{"location":"graphql/#api","text":"By default, the Hasura GraphQL API tracks all tables, but only flat tables are publicly accessible (no password required). Interacting with APIs during development is handy using the Hasura GraphQL explorer . By default, explorer is located here: localhost:8081/console/api-explorer . All tables of the database tracked by the GraphQL engine can be queried over the GraphQL endpoint. If you have a tracked table in your database, its query field is added as a nested field under the query_root root level type. By default, only flat tables are tracked. You can explore the entire schema and the available queries using the GraphiQL interface in the Hasura console or using GraphQL Schema Types .","title":"API"},{"location":"graphql/#queries","text":"GraphQL queries are used to fetch data from the server. Query request example: query MyQuery { headers(where: {timeframe: {_eq: 24}}) { channels_cnt_all channels_cnt_period timeframe top_zone_pair zones_cnt_all zones_cnt_period chart } } Query request example with curl: curl -i -H 'Content-Type: application/json' -X POST -d '{ \"query\": \"query MyQuery { headers(where: {timeframe: {_eq: 24}}) { channels_cnt_all channels_cnt_period timeframe top_zone_pair zones_cnt_all zones_cnt_period chart } }\" }' http://localhost:8081/v1/graphql Query response example with curl: HTTP/1.1 200 OK Transfer-Encoding: chunked Date: Sun, 29 Nov 2020 19:27:25 GMT Server: Warp/3.2.27 x-request-id: 03f7f31b-4290-4821-ac61-b569d3316e69 Content-Type: application/json; charset=utf-8 {\"data\":{\"headers\":[{\"channels_cnt_all\":292,\"channels_cnt_period\":0,\"timeframe\":24,\"top_zone_pair\":[],\"zones_cnt_all\":185,\"zones_cnt_period\":0,\"chart\":[{\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}, {\"txs\": 0}]}]}}","title":"Queries"},{"location":"graphql/#subscriptions","text":"A GraphQL subscription is essentially a query where the client receives an update whenever the value of any field changes upstream. Subscriptions are supported for all kinds of queries. All the concepts of queries hold true for subscriptions as well. The Hasura GraphQL engine subscriptions are actually live queries, i.e. a subscription will return the latest result of the query being made and not necessarily all the individual events leading up to the result. By default updates are delivered to clients every 1 sec. This interval can be configured via the HASURA_GRAPHQL_LIVE_QUERIES_MULTIPLEXED_REFETCH_INTERVAL env var. Subscription request example: subscription MySubscription { headers(where: {timeframe: {_eq: 24}}) { channels_cnt_all channels_cnt_period timeframe top_zone_pair zones_cnt_all zones_cnt_period chart } } Hasura GraphQL engine uses the GraphQL over WebSocket Protocol by the apollographql/subscriptions-transport-ws library for sending and receiving events. You can read more about the implementation of subscriptions in the architecture doc .","title":"Subscriptions"},{"location":"graphql/#migrations","text":"The Hasura GraphQL migration engine is used to manage database migrations. Use the Hasura CLI to manage migration or use pre-built initial migrations when running Hasura (development only).","title":"Migrations"},{"location":"graphql/#reating-migrations","text":"When working with the database through the hasura console , the changes will be exported to the migration and metadata directory where the hasura cli was initialized. See the CLI migtations for further adjustments and management of migrations.","title":"\u0421reating migrations"},{"location":"graphql/#initial-migrations","text":"Initial migrations of the database and Hasura GraphQL metadata occur if the configuration has parameter values: HASURA_GRAPHQL_MIGRATIONS_DIR HASURA_GRAPHQL_METADATA_DIR If the values are set correctly, then all migrations located in the configured directories will be performed. Each database migration must be located in a separate directory <migration_number>_<migration_name> . Each such directory should contain up.sql for new changes and down.sql to revert to a previous state.","title":"Initial migrations"},{"location":"graphql/#cli-migrations","text":"All commands must be executed in the hasura directory or initialized a new directory, by default ./hasura directory. hasura init - Initialize directory for Hasura GraphQL Engine migrations, but you can use the existing hasura directory. You will need to specify the configuration in the config.yaml file. hasura migrate create baseline --from-server - Exports a snapshot of the current database schema named baseline to the migrations directory. hasura metadata export - Exports the entire hasura metadata schema. The uploaded data is placed in the metadata directory. hasura console --console-port 8083 - Runs hasura console on localhost:8083/console . hasura migrate create <name-of-migration> - Create sql and yaml files required for a migration. hasura migrate squash --name \"<feature-name>\" --from <migration-version> - Squash multiple migrations leading upto the latest one into a single migration file. hasura migrate apply --endpoint <server-endpoint> - Apply migrations on the database. hasura metadata apply --endpoint <server-endpoint> - Apply Hasura metadata on a database. hasura migrate status - Display current status of migrations on a database.","title":"CLI migrations"},{"location":"graphql/#console","text":"It is very convenient to use Hasura console during development. Some of its parts are presented below. During production, it is not recommended to automatically enable the console along with hasura, but it is recommended to connect to hasura remotely by running the console locally. See examples in CLI migrations .","title":"Console"},{"location":"graphql/#explorer","text":"","title":"Explorer"},{"location":"graphql/#data-schema","text":"","title":"Data schema"},{"location":"graphql/#raw-sql","text":"","title":"Raw SQL"},{"location":"processor/","text":"Tx processor The MoZ processor is a standalone process that listens to a queue in message broker for new blocks and writes changes to the database core tables . There can be multiple processors. In this case, every processor must listen to his own queue. Responsiblities The processor gets performs the following functions: get a new block from the queue recognize a type of the messages process each message according to its type. For example, it can be an updating of the MoZ stats in case of an ibc transfer or adding a new record into the database if it's an ibc init message update the database with the latest processed block number Possible errors The processor will reject a new block if it has wrong block number (higher, or lower than expected)","title":"Tx processor"},{"location":"processor/#tx-processor","text":"The MoZ processor is a standalone process that listens to a queue in message broker for new blocks and writes changes to the database core tables . There can be multiple processors. In this case, every processor must listen to his own queue.","title":"Tx processor"},{"location":"processor/#responsiblities","text":"The processor gets performs the following functions: get a new block from the queue recognize a type of the messages process each message according to its type. For example, it can be an updating of the MoZ stats in case of an ibc transfer or adding a new record into the database if it's an ibc init message update the database with the latest processed block number","title":"Responsiblities"},{"location":"processor/#possible-errors","text":"The processor will reject a new block if it has wrong block number (higher, or lower than expected)","title":"Possible errors"},{"location":"watcher/","text":"Watcher The watcher listens to the new blocks, parses them, and assembly the information into the zone-neutral data structures. Watcher only works with one zone, so you need to run a separate watcher for each zone. The MoZ watcher is a standalone process that takes 2 input arguments: a zone RPC address a starting block number and listens to the given zone starting from the given block number. Responsibilies The newly created object of the block type is sent to the queue in message broker . block { chain_id: <string>, the zone chain id block_time: <timestamp> block_num: <number> txs: array [transaction] } transaction { hash: <string> msgs: array [message] } message { transfer_info: { sender: <address> recipient: <address> quantity: <int> precision: <smallint> token: <code> } type: (send | receive | open_channel | open_connection | open_client | unknown) ibc: true | false ibc_channel_id: <string> ibc_connection_id: <string> ibc_client_id: <string> } Possible errors 1) The watcher can't decode the block using the libraries every time the block contains MsgCreateValidator. It looks like a problem with the public key *types.Any . 2) Error when sometimes decoding MsgUpdateClient. The error was corrected if you fixed it in the cosmos-sdk source code. Need to add a type decoding parameter as it couldn't decode from a string. Amount uint64 protobuf:\"varint,2,opt,name=amount,proto3\" json:\"amount,string,omitempty\" It was necessary to add string. The file is located here: cosmos-sdk@v0.40.0-rc3/x/ibc/applications/transfer/types/transfer.pb.go And here is the link to the file on github: transfer.pb.go#L33","title":"Watcher"},{"location":"watcher/#watcher","text":"The watcher listens to the new blocks, parses them, and assembly the information into the zone-neutral data structures. Watcher only works with one zone, so you need to run a separate watcher for each zone. The MoZ watcher is a standalone process that takes 2 input arguments: a zone RPC address a starting block number and listens to the given zone starting from the given block number.","title":"Watcher"},{"location":"watcher/#responsibilies","text":"The newly created object of the block type is sent to the queue in message broker . block { chain_id: <string>, the zone chain id block_time: <timestamp> block_num: <number> txs: array [transaction] } transaction { hash: <string> msgs: array [message] } message { transfer_info: { sender: <address> recipient: <address> quantity: <int> precision: <smallint> token: <code> } type: (send | receive | open_channel | open_connection | open_client | unknown) ibc: true | false ibc_channel_id: <string> ibc_connection_id: <string> ibc_client_id: <string> }","title":"Responsibilies"},{"location":"watcher/#possible-errors","text":"1) The watcher can't decode the block using the libraries every time the block contains MsgCreateValidator. It looks like a problem with the public key *types.Any . 2) Error when sometimes decoding MsgUpdateClient. The error was corrected if you fixed it in the cosmos-sdk source code. Need to add a type decoding parameter as it couldn't decode from a string. Amount uint64 protobuf:\"varint,2,opt,name=amount,proto3\" json:\"amount,string,omitempty\" It was necessary to add string. The file is located here: cosmos-sdk@v0.40.0-rc3/x/ibc/applications/transfer/types/transfer.pb.go And here is the link to the file on github: transfer.pb.go#L33","title":"Possible errors"},{"location":"data/schema/","text":"Schema Types Table of Contents * [Query](#query) * [Objects](#objects) * [headers](#headers) * [headers_aggregate](#headers_aggregate) * [headers_aggregate_fields](#headers_aggregate_fields) * [headers_avg_fields](#headers_avg_fields) * [headers_max_fields](#headers_max_fields) * [headers_min_fields](#headers_min_fields) * [headers_stddev_fields](#headers_stddev_fields) * [headers_stddev_pop_fields](#headers_stddev_pop_fields) * [headers_stddev_samp_fields](#headers_stddev_samp_fields) * [headers_sum_fields](#headers_sum_fields) * [headers_var_pop_fields](#headers_var_pop_fields) * [headers_var_samp_fields](#headers_var_samp_fields) * [headers_variance_fields](#headers_variance_fields) * [subscription_root](#subscription_root) * [zones_graphs](#zones_graphs) * [zones_graphs_aggregate](#zones_graphs_aggregate) * [zones_graphs_aggregate_fields](#zones_graphs_aggregate_fields) * [zones_graphs_avg_fields](#zones_graphs_avg_fields) * [zones_graphs_max_fields](#zones_graphs_max_fields) * [zones_graphs_min_fields](#zones_graphs_min_fields) * [zones_graphs_stddev_fields](#zones_graphs_stddev_fields) * [zones_graphs_stddev_pop_fields](#zones_graphs_stddev_pop_fields) * [zones_graphs_stddev_samp_fields](#zones_graphs_stddev_samp_fields) * [zones_graphs_sum_fields](#zones_graphs_sum_fields) * [zones_graphs_var_pop_fields](#zones_graphs_var_pop_fields) * [zones_graphs_var_samp_fields](#zones_graphs_var_samp_fields) * [zones_graphs_variance_fields](#zones_graphs_variance_fields) * [zones_stats](#zones_stats) * [zones_stats_aggregate](#zones_stats_aggregate) * [zones_stats_aggregate_fields](#zones_stats_aggregate_fields) * [zones_stats_avg_fields](#zones_stats_avg_fields) * [zones_stats_max_fields](#zones_stats_max_fields) * [zones_stats_min_fields](#zones_stats_min_fields) * [zones_stats_stddev_fields](#zones_stats_stddev_fields) * [zones_stats_stddev_pop_fields](#zones_stats_stddev_pop_fields) * [zones_stats_stddev_samp_fields](#zones_stats_stddev_samp_fields) * [zones_stats_sum_fields](#zones_stats_sum_fields) * [zones_stats_var_pop_fields](#zones_stats_var_pop_fields) * [zones_stats_var_samp_fields](#zones_stats_var_samp_fields) * [zones_stats_variance_fields](#zones_stats_variance_fields) * [Inputs](#inputs) * [Int_comparison_exp](#int_comparison_exp) * [String_comparison_exp](#string_comparison_exp) * [headers_aggregate_order_by](#headers_aggregate_order_by) * [headers_avg_order_by](#headers_avg_order_by) * [headers_bool_exp](#headers_bool_exp) * [headers_max_order_by](#headers_max_order_by) * [headers_min_order_by](#headers_min_order_by) * [headers_order_by](#headers_order_by) * [headers_pk_columns_input](#headers_pk_columns_input) * [headers_stddev_order_by](#headers_stddev_order_by) * [headers_stddev_pop_order_by](#headers_stddev_pop_order_by) * [headers_stddev_samp_order_by](#headers_stddev_samp_order_by) * [headers_sum_order_by](#headers_sum_order_by) * [headers_var_pop_order_by](#headers_var_pop_order_by) * [headers_var_samp_order_by](#headers_var_samp_order_by) * [headers_variance_order_by](#headers_variance_order_by) * [jsonb_comparison_exp](#jsonb_comparison_exp) * [numeric_comparison_exp](#numeric_comparison_exp) * [zones_graphs_aggregate_order_by](#zones_graphs_aggregate_order_by) * [zones_graphs_avg_order_by](#zones_graphs_avg_order_by) * [zones_graphs_bool_exp](#zones_graphs_bool_exp) * [zones_graphs_max_order_by](#zones_graphs_max_order_by) * [zones_graphs_min_order_by](#zones_graphs_min_order_by) * [zones_graphs_order_by](#zones_graphs_order_by) * [zones_graphs_pk_columns_input](#zones_graphs_pk_columns_input) * [zones_graphs_stddev_order_by](#zones_graphs_stddev_order_by) * [zones_graphs_stddev_pop_order_by](#zones_graphs_stddev_pop_order_by) * [zones_graphs_stddev_samp_order_by](#zones_graphs_stddev_samp_order_by) * [zones_graphs_sum_order_by](#zones_graphs_sum_order_by) * [zones_graphs_var_pop_order_by](#zones_graphs_var_pop_order_by) * [zones_graphs_var_samp_order_by](#zones_graphs_var_samp_order_by) * [zones_graphs_variance_order_by](#zones_graphs_variance_order_by) * [zones_stats_aggregate_order_by](#zones_stats_aggregate_order_by) * [zones_stats_avg_order_by](#zones_stats_avg_order_by) * [zones_stats_bool_exp](#zones_stats_bool_exp) * [zones_stats_max_order_by](#zones_stats_max_order_by) * [zones_stats_min_order_by](#zones_stats_min_order_by) * [zones_stats_order_by](#zones_stats_order_by) * [zones_stats_pk_columns_input](#zones_stats_pk_columns_input) * [zones_stats_stddev_order_by](#zones_stats_stddev_order_by) * [zones_stats_stddev_pop_order_by](#zones_stats_stddev_pop_order_by) * [zones_stats_stddev_samp_order_by](#zones_stats_stddev_samp_order_by) * [zones_stats_sum_order_by](#zones_stats_sum_order_by) * [zones_stats_var_pop_order_by](#zones_stats_var_pop_order_by) * [zones_stats_var_samp_order_by](#zones_stats_var_samp_order_by) * [zones_stats_variance_order_by](#zones_stats_variance_order_by) * [Enums](#enums) * [headers_select_column](#headers_select_column) * [order_by](#order_by) * [zones_graphs_select_column](#zones_graphs_select_column) * [zones_stats_select_column](#zones_stats_select_column) * [Scalars](#scalars) * [Boolean](#boolean) * [Float](#float) * [Int](#int) * [String](#string) * [jsonb](#jsonb) * [numeric](#numeric) Query (query_root) Field Argument Type Description headers [ headers !]! distinct_on [ headers_select_column !] limit Int offset Int order_by [ headers_order_by !] where headers_bool_exp headers_aggregate headers_aggregate ! distinct_on [ headers_select_column !] limit Int offset Int order_by [ headers_order_by !] where headers_bool_exp headers_by_pk headers timeframe Int ! zones_graphs [ zones_graphs !]! distinct_on [ zones_graphs_select_column !] limit Int offset Int order_by [ zones_graphs_order_by !] where zones_graphs_bool_exp zones_graphs_aggregate zones_graphs_aggregate ! distinct_on [ zones_graphs_select_column !] limit Int offset Int order_by [ zones_graphs_order_by !] where zones_graphs_bool_exp zones_graphs_by_pk zones_graphs source String ! target String ! timeframe Int ! zones_stats [ zones_stats !]! distinct_on [ zones_stats_select_column !] limit Int offset Int order_by [ zones_stats_order_by !] where zones_stats_bool_exp zones_stats_aggregate zones_stats_aggregate ! distinct_on [ zones_stats_select_column !] limit Int offset Int order_by [ zones_stats_order_by !] where zones_stats_bool_exp zones_stats_by_pk zones_stats timeframe Int ! zone String ! Objects headers Field Argument Type Description channels_cnt_all Int ! channels_cnt_period Int ! chart jsonb ! path String timeframe Int ! top_zone_pair jsonb ! path String zones_cnt_all Int ! zones_cnt_period Int ! headers_aggregate Field Argument Type Description aggregate headers_aggregate_fields nodes [ headers !]! headers_aggregate_fields Field Argument Type Description avg headers_avg_fields count Int columns [ headers_select_column !] distinct Boolean max headers_max_fields min headers_min_fields stddev headers_stddev_fields stddev_pop headers_stddev_pop_fields stddev_samp headers_stddev_samp_fields sum headers_sum_fields var_pop headers_var_pop_fields var_samp headers_var_samp_fields variance headers_variance_fields headers_avg_fields Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float headers_max_fields Field Argument Type Description channels_cnt_all Int channels_cnt_period Int timeframe Int zones_cnt_all Int zones_cnt_period Int headers_min_fields Field Argument Type Description channels_cnt_all Int channels_cnt_period Int timeframe Int zones_cnt_all Int zones_cnt_period Int headers_stddev_fields Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float headers_stddev_pop_fields Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float headers_stddev_samp_fields Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float headers_sum_fields Field Argument Type Description channels_cnt_all Int channels_cnt_period Int timeframe Int zones_cnt_all Int zones_cnt_period Int headers_var_pop_fields Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float headers_var_samp_fields Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float headers_variance_fields Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float subscription_root Field Argument Type Description headers [ headers !]! distinct_on [ headers_select_column !] limit Int offset Int order_by [ headers_order_by !] where headers_bool_exp headers_aggregate headers_aggregate ! distinct_on [ headers_select_column !] limit Int offset Int order_by [ headers_order_by !] where headers_bool_exp headers_by_pk headers timeframe Int ! zones_graphs [ zones_graphs !]! distinct_on [ zones_graphs_select_column !] limit Int offset Int order_by [ zones_graphs_order_by !] where zones_graphs_bool_exp zones_graphs_aggregate zones_graphs_aggregate ! distinct_on [ zones_graphs_select_column !] limit Int offset Int order_by [ zones_graphs_order_by !] where zones_graphs_bool_exp zones_graphs_by_pk zones_graphs source String ! target String ! timeframe Int ! zones_stats [ zones_stats !]! distinct_on [ zones_stats_select_column !] limit Int offset Int order_by [ zones_stats_order_by !] where zones_stats_bool_exp zones_stats_aggregate zones_stats_aggregate ! distinct_on [ zones_stats_select_column !] limit Int offset Int order_by [ zones_stats_order_by !] where zones_stats_bool_exp zones_stats_by_pk zones_stats timeframe Int ! zone String ! zones_graphs Field Argument Type Description source String ! target String ! timeframe Int ! zones_graphs_aggregate Field Argument Type Description aggregate zones_graphs_aggregate_fields nodes [ zones_graphs !]! zones_graphs_aggregate_fields Field Argument Type Description avg zones_graphs_avg_fields count Int columns [ zones_graphs_select_column !] distinct Boolean max zones_graphs_max_fields min zones_graphs_min_fields stddev zones_graphs_stddev_fields stddev_pop zones_graphs_stddev_pop_fields stddev_samp zones_graphs_stddev_samp_fields sum zones_graphs_sum_fields var_pop zones_graphs_var_pop_fields var_samp zones_graphs_var_samp_fields variance zones_graphs_variance_fields zones_graphs_avg_fields Field Argument Type Description timeframe Float zones_graphs_max_fields Field Argument Type Description source String target String timeframe Int zones_graphs_min_fields Field Argument Type Description source String target String timeframe Int zones_graphs_stddev_fields Field Argument Type Description timeframe Float zones_graphs_stddev_pop_fields Field Argument Type Description timeframe Float zones_graphs_stddev_samp_fields Field Argument Type Description timeframe Float zones_graphs_sum_fields Field Argument Type Description timeframe Int zones_graphs_var_pop_fields Field Argument Type Description timeframe Float zones_graphs_var_samp_fields Field Argument Type Description timeframe Float zones_graphs_variance_fields Field Argument Type Description timeframe Float zones_stats Field Argument Type Description channels_num Int ! chart jsonb ! path String ibc_percent Int ! ibc_tx_in Int ! ibc_tx_in_diff Int ! ibc_tx_in_rating Int ! ibc_tx_in_rating_diff Int ! ibc_tx_in_weight numeric ! ibc_tx_out Int ! ibc_tx_out_diff Int ! ibc_tx_out_rating Int ! ibc_tx_out_rating_diff Int ! ibc_tx_out_weight numeric ! timeframe Int ! total_ibc_txs Int ! total_ibc_txs_diff Int ! total_ibc_txs_rating Int ! total_ibc_txs_rating_diff Int ! total_ibc_txs_weight numeric ! total_txs Int ! total_txs_diff Int ! total_txs_rating Int ! total_txs_rating_diff Int ! total_txs_weight numeric ! zone String ! zones_stats_aggregate Field Argument Type Description aggregate zones_stats_aggregate_fields nodes [ zones_stats !]! zones_stats_aggregate_fields Field Argument Type Description avg zones_stats_avg_fields count Int columns [ zones_stats_select_column !] distinct Boolean max zones_stats_max_fields min zones_stats_min_fields stddev zones_stats_stddev_fields stddev_pop zones_stats_stddev_pop_fields stddev_samp zones_stats_stddev_samp_fields sum zones_stats_sum_fields var_pop zones_stats_var_pop_fields var_samp zones_stats_var_samp_fields variance zones_stats_variance_fields zones_stats_avg_fields Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float zones_stats_max_fields Field Argument Type Description channels_num Int ibc_percent Int ibc_tx_in Int ibc_tx_in_diff Int ibc_tx_in_rating Int ibc_tx_in_rating_diff Int ibc_tx_in_weight numeric ibc_tx_out Int ibc_tx_out_diff Int ibc_tx_out_rating Int ibc_tx_out_rating_diff Int ibc_tx_out_weight numeric timeframe Int total_ibc_txs Int total_ibc_txs_diff Int total_ibc_txs_rating Int total_ibc_txs_rating_diff Int total_ibc_txs_weight numeric total_txs Int total_txs_diff Int total_txs_rating Int total_txs_rating_diff Int total_txs_weight numeric zone String zones_stats_min_fields Field Argument Type Description channels_num Int ibc_percent Int ibc_tx_in Int ibc_tx_in_diff Int ibc_tx_in_rating Int ibc_tx_in_rating_diff Int ibc_tx_in_weight numeric ibc_tx_out Int ibc_tx_out_diff Int ibc_tx_out_rating Int ibc_tx_out_rating_diff Int ibc_tx_out_weight numeric timeframe Int total_ibc_txs Int total_ibc_txs_diff Int total_ibc_txs_rating Int total_ibc_txs_rating_diff Int total_ibc_txs_weight numeric total_txs Int total_txs_diff Int total_txs_rating Int total_txs_rating_diff Int total_txs_weight numeric zone String zones_stats_stddev_fields Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float zones_stats_stddev_pop_fields Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float zones_stats_stddev_samp_fields Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float zones_stats_sum_fields Field Argument Type Description channels_num Int ibc_percent Int ibc_tx_in Int ibc_tx_in_diff Int ibc_tx_in_rating Int ibc_tx_in_rating_diff Int ibc_tx_in_weight numeric ibc_tx_out Int ibc_tx_out_diff Int ibc_tx_out_rating Int ibc_tx_out_rating_diff Int ibc_tx_out_weight numeric timeframe Int total_ibc_txs Int total_ibc_txs_diff Int total_ibc_txs_rating Int total_ibc_txs_rating_diff Int total_ibc_txs_weight numeric total_txs Int total_txs_diff Int total_txs_rating Int total_txs_rating_diff Int total_txs_weight numeric zones_stats_var_pop_fields Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float zones_stats_var_samp_fields Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float zones_stats_variance_fields Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float Inputs Int_comparison_exp Field Type Description _eq Int _gt Int _gte Int _in [ Int !] _is_null Boolean _lt Int _lte Int _neq Int _nin [ Int !] String_comparison_exp Field Type Description _eq String _gt String _gte String _ilike String _in [ String !] _is_null Boolean _like String _lt String _lte String _neq String _nilike String _nin [ String !] _nlike String _nsimilar String _similar String headers_aggregate_order_by Field Type Description avg headers_avg_order_by count order_by max headers_max_order_by min headers_min_order_by stddev headers_stddev_order_by stddev_pop headers_stddev_pop_order_by stddev_samp headers_stddev_samp_order_by sum headers_sum_order_by var_pop headers_var_pop_order_by var_samp headers_var_samp_order_by variance headers_variance_order_by headers_avg_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_bool_exp Field Type Description _and [ headers_bool_exp ] _not headers_bool_exp _or [ headers_bool_exp ] channels_cnt_all Int_comparison_exp channels_cnt_period Int_comparison_exp chart jsonb_comparison_exp timeframe Int_comparison_exp top_zone_pair jsonb_comparison_exp zones_cnt_all Int_comparison_exp zones_cnt_period Int_comparison_exp headers_max_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_min_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by chart order_by timeframe order_by top_zone_pair order_by zones_cnt_all order_by zones_cnt_period order_by headers_pk_columns_input Field Type Description timeframe Int ! headers_stddev_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_stddev_pop_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_stddev_samp_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_sum_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_var_pop_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_var_samp_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by headers_variance_order_by Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by jsonb_comparison_exp Field Type Description _contained_in jsonb _contains jsonb _eq jsonb _gt jsonb _gte jsonb _has_key String _has_keys_all [ String !] _has_keys_any [ String !] _in [ jsonb !] _is_null Boolean _lt jsonb _lte jsonb _neq jsonb _nin [ jsonb !] numeric_comparison_exp Field Type Description _eq numeric _gt numeric _gte numeric _in [ numeric !] _is_null Boolean _lt numeric _lte numeric _neq numeric _nin [ numeric !] zones_graphs_aggregate_order_by Field Type Description avg zones_graphs_avg_order_by count order_by max zones_graphs_max_order_by min zones_graphs_min_order_by stddev zones_graphs_stddev_order_by stddev_pop zones_graphs_stddev_pop_order_by stddev_samp zones_graphs_stddev_samp_order_by sum zones_graphs_sum_order_by var_pop zones_graphs_var_pop_order_by var_samp zones_graphs_var_samp_order_by variance zones_graphs_variance_order_by zones_graphs_avg_order_by Field Type Description timeframe order_by zones_graphs_bool_exp Field Type Description _and [ zones_graphs_bool_exp ] _not zones_graphs_bool_exp _or [ zones_graphs_bool_exp ] source String_comparison_exp target String_comparison_exp timeframe Int_comparison_exp zones_graphs_max_order_by Field Type Description source order_by target order_by timeframe order_by zones_graphs_min_order_by Field Type Description source order_by target order_by timeframe order_by zones_graphs_order_by Field Type Description source order_by target order_by timeframe order_by zones_graphs_pk_columns_input Field Type Description source String ! target String ! timeframe Int ! zones_graphs_stddev_order_by Field Type Description timeframe order_by zones_graphs_stddev_pop_order_by Field Type Description timeframe order_by zones_graphs_stddev_samp_order_by Field Type Description timeframe order_by zones_graphs_sum_order_by Field Type Description timeframe order_by zones_graphs_var_pop_order_by Field Type Description timeframe order_by zones_graphs_var_samp_order_by Field Type Description timeframe order_by zones_graphs_variance_order_by Field Type Description timeframe order_by zones_stats_aggregate_order_by Field Type Description avg zones_stats_avg_order_by count order_by max zones_stats_max_order_by min zones_stats_min_order_by stddev zones_stats_stddev_order_by stddev_pop zones_stats_stddev_pop_order_by stddev_samp zones_stats_stddev_samp_order_by sum zones_stats_sum_order_by var_pop zones_stats_var_pop_order_by var_samp zones_stats_var_samp_order_by variance zones_stats_variance_order_by zones_stats_avg_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zones_stats_bool_exp Field Type Description _and [ zones_stats_bool_exp ] _not zones_stats_bool_exp _or [ zones_stats_bool_exp ] channels_num Int_comparison_exp chart jsonb_comparison_exp ibc_percent Int_comparison_exp ibc_tx_in Int_comparison_exp ibc_tx_in_diff Int_comparison_exp ibc_tx_in_rating Int_comparison_exp ibc_tx_in_rating_diff Int_comparison_exp ibc_tx_in_weight numeric_comparison_exp ibc_tx_out Int_comparison_exp ibc_tx_out_diff Int_comparison_exp ibc_tx_out_rating Int_comparison_exp ibc_tx_out_rating_diff Int_comparison_exp ibc_tx_out_weight numeric_comparison_exp timeframe Int_comparison_exp total_ibc_txs Int_comparison_exp total_ibc_txs_diff Int_comparison_exp total_ibc_txs_rating Int_comparison_exp total_ibc_txs_rating_diff Int_comparison_exp total_ibc_txs_weight numeric_comparison_exp total_txs Int_comparison_exp total_txs_diff Int_comparison_exp total_txs_rating Int_comparison_exp total_txs_rating_diff Int_comparison_exp total_txs_weight numeric_comparison_exp zone String_comparison_exp zones_stats_max_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zone order_by zones_stats_min_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zone order_by zones_stats_order_by Field Type Description channels_num order_by chart order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zone order_by zones_stats_pk_columns_input Field Type Description timeframe Int ! zone String ! zones_stats_stddev_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zones_stats_stddev_pop_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zones_stats_stddev_samp_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zones_stats_sum_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zones_stats_var_pop_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zones_stats_var_samp_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zones_stats_variance_order_by Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by Enums headers_select_column Value Description channels_cnt_all channels_cnt_period chart timeframe top_zone_pair zones_cnt_all zones_cnt_period order_by Value Description asc asc_nulls_first asc_nulls_last desc desc_nulls_first desc_nulls_last zones_graphs_select_column Value Description source target timeframe zones_stats_select_column Value Description channels_num chart ibc_percent ibc_tx_in ibc_tx_in_diff ibc_tx_in_rating ibc_tx_in_rating_diff ibc_tx_in_weight ibc_tx_out ibc_tx_out_diff ibc_tx_out_rating ibc_tx_out_rating_diff ibc_tx_out_weight timeframe total_ibc_txs total_ibc_txs_diff total_ibc_txs_rating total_ibc_txs_rating_diff total_ibc_txs_weight total_txs total_txs_diff total_txs_rating total_txs_rating_diff total_txs_weight zone Scalars Boolean The Boolean scalar type represents true or false . Float The Float scalar type represents signed double-precision fractional values as specified by IEEE 754 . Int The Int scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1. String The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text. jsonb numeric","title":"GraphQL schema Types"},{"location":"data/schema/#schema-types","text":"Table of Contents * [Query](#query) * [Objects](#objects) * [headers](#headers) * [headers_aggregate](#headers_aggregate) * [headers_aggregate_fields](#headers_aggregate_fields) * [headers_avg_fields](#headers_avg_fields) * [headers_max_fields](#headers_max_fields) * [headers_min_fields](#headers_min_fields) * [headers_stddev_fields](#headers_stddev_fields) * [headers_stddev_pop_fields](#headers_stddev_pop_fields) * [headers_stddev_samp_fields](#headers_stddev_samp_fields) * [headers_sum_fields](#headers_sum_fields) * [headers_var_pop_fields](#headers_var_pop_fields) * [headers_var_samp_fields](#headers_var_samp_fields) * [headers_variance_fields](#headers_variance_fields) * [subscription_root](#subscription_root) * [zones_graphs](#zones_graphs) * [zones_graphs_aggregate](#zones_graphs_aggregate) * [zones_graphs_aggregate_fields](#zones_graphs_aggregate_fields) * [zones_graphs_avg_fields](#zones_graphs_avg_fields) * [zones_graphs_max_fields](#zones_graphs_max_fields) * [zones_graphs_min_fields](#zones_graphs_min_fields) * [zones_graphs_stddev_fields](#zones_graphs_stddev_fields) * [zones_graphs_stddev_pop_fields](#zones_graphs_stddev_pop_fields) * [zones_graphs_stddev_samp_fields](#zones_graphs_stddev_samp_fields) * [zones_graphs_sum_fields](#zones_graphs_sum_fields) * [zones_graphs_var_pop_fields](#zones_graphs_var_pop_fields) * [zones_graphs_var_samp_fields](#zones_graphs_var_samp_fields) * [zones_graphs_variance_fields](#zones_graphs_variance_fields) * [zones_stats](#zones_stats) * [zones_stats_aggregate](#zones_stats_aggregate) * [zones_stats_aggregate_fields](#zones_stats_aggregate_fields) * [zones_stats_avg_fields](#zones_stats_avg_fields) * [zones_stats_max_fields](#zones_stats_max_fields) * [zones_stats_min_fields](#zones_stats_min_fields) * [zones_stats_stddev_fields](#zones_stats_stddev_fields) * [zones_stats_stddev_pop_fields](#zones_stats_stddev_pop_fields) * [zones_stats_stddev_samp_fields](#zones_stats_stddev_samp_fields) * [zones_stats_sum_fields](#zones_stats_sum_fields) * [zones_stats_var_pop_fields](#zones_stats_var_pop_fields) * [zones_stats_var_samp_fields](#zones_stats_var_samp_fields) * [zones_stats_variance_fields](#zones_stats_variance_fields) * [Inputs](#inputs) * [Int_comparison_exp](#int_comparison_exp) * [String_comparison_exp](#string_comparison_exp) * [headers_aggregate_order_by](#headers_aggregate_order_by) * [headers_avg_order_by](#headers_avg_order_by) * [headers_bool_exp](#headers_bool_exp) * [headers_max_order_by](#headers_max_order_by) * [headers_min_order_by](#headers_min_order_by) * [headers_order_by](#headers_order_by) * [headers_pk_columns_input](#headers_pk_columns_input) * [headers_stddev_order_by](#headers_stddev_order_by) * [headers_stddev_pop_order_by](#headers_stddev_pop_order_by) * [headers_stddev_samp_order_by](#headers_stddev_samp_order_by) * [headers_sum_order_by](#headers_sum_order_by) * [headers_var_pop_order_by](#headers_var_pop_order_by) * [headers_var_samp_order_by](#headers_var_samp_order_by) * [headers_variance_order_by](#headers_variance_order_by) * [jsonb_comparison_exp](#jsonb_comparison_exp) * [numeric_comparison_exp](#numeric_comparison_exp) * [zones_graphs_aggregate_order_by](#zones_graphs_aggregate_order_by) * [zones_graphs_avg_order_by](#zones_graphs_avg_order_by) * [zones_graphs_bool_exp](#zones_graphs_bool_exp) * [zones_graphs_max_order_by](#zones_graphs_max_order_by) * [zones_graphs_min_order_by](#zones_graphs_min_order_by) * [zones_graphs_order_by](#zones_graphs_order_by) * [zones_graphs_pk_columns_input](#zones_graphs_pk_columns_input) * [zones_graphs_stddev_order_by](#zones_graphs_stddev_order_by) * [zones_graphs_stddev_pop_order_by](#zones_graphs_stddev_pop_order_by) * [zones_graphs_stddev_samp_order_by](#zones_graphs_stddev_samp_order_by) * [zones_graphs_sum_order_by](#zones_graphs_sum_order_by) * [zones_graphs_var_pop_order_by](#zones_graphs_var_pop_order_by) * [zones_graphs_var_samp_order_by](#zones_graphs_var_samp_order_by) * [zones_graphs_variance_order_by](#zones_graphs_variance_order_by) * [zones_stats_aggregate_order_by](#zones_stats_aggregate_order_by) * [zones_stats_avg_order_by](#zones_stats_avg_order_by) * [zones_stats_bool_exp](#zones_stats_bool_exp) * [zones_stats_max_order_by](#zones_stats_max_order_by) * [zones_stats_min_order_by](#zones_stats_min_order_by) * [zones_stats_order_by](#zones_stats_order_by) * [zones_stats_pk_columns_input](#zones_stats_pk_columns_input) * [zones_stats_stddev_order_by](#zones_stats_stddev_order_by) * [zones_stats_stddev_pop_order_by](#zones_stats_stddev_pop_order_by) * [zones_stats_stddev_samp_order_by](#zones_stats_stddev_samp_order_by) * [zones_stats_sum_order_by](#zones_stats_sum_order_by) * [zones_stats_var_pop_order_by](#zones_stats_var_pop_order_by) * [zones_stats_var_samp_order_by](#zones_stats_var_samp_order_by) * [zones_stats_variance_order_by](#zones_stats_variance_order_by) * [Enums](#enums) * [headers_select_column](#headers_select_column) * [order_by](#order_by) * [zones_graphs_select_column](#zones_graphs_select_column) * [zones_stats_select_column](#zones_stats_select_column) * [Scalars](#scalars) * [Boolean](#boolean) * [Float](#float) * [Int](#int) * [String](#string) * [jsonb](#jsonb) * [numeric](#numeric)","title":"Schema Types"},{"location":"data/schema/#query-query_root","text":"Field Argument Type Description headers [ headers !]! distinct_on [ headers_select_column !] limit Int offset Int order_by [ headers_order_by !] where headers_bool_exp headers_aggregate headers_aggregate ! distinct_on [ headers_select_column !] limit Int offset Int order_by [ headers_order_by !] where headers_bool_exp headers_by_pk headers timeframe Int ! zones_graphs [ zones_graphs !]! distinct_on [ zones_graphs_select_column !] limit Int offset Int order_by [ zones_graphs_order_by !] where zones_graphs_bool_exp zones_graphs_aggregate zones_graphs_aggregate ! distinct_on [ zones_graphs_select_column !] limit Int offset Int order_by [ zones_graphs_order_by !] where zones_graphs_bool_exp zones_graphs_by_pk zones_graphs source String ! target String ! timeframe Int ! zones_stats [ zones_stats !]! distinct_on [ zones_stats_select_column !] limit Int offset Int order_by [ zones_stats_order_by !] where zones_stats_bool_exp zones_stats_aggregate zones_stats_aggregate ! distinct_on [ zones_stats_select_column !] limit Int offset Int order_by [ zones_stats_order_by !] where zones_stats_bool_exp zones_stats_by_pk zones_stats timeframe Int ! zone String !","title":"Query (query_root)"},{"location":"data/schema/#objects","text":"","title":"Objects"},{"location":"data/schema/#headers","text":"Field Argument Type Description channels_cnt_all Int ! channels_cnt_period Int ! chart jsonb ! path String timeframe Int ! top_zone_pair jsonb ! path String zones_cnt_all Int ! zones_cnt_period Int !","title":"headers"},{"location":"data/schema/#headers_aggregate","text":"Field Argument Type Description aggregate headers_aggregate_fields nodes [ headers !]!","title":"headers_aggregate"},{"location":"data/schema/#headers_aggregate_fields","text":"Field Argument Type Description avg headers_avg_fields count Int columns [ headers_select_column !] distinct Boolean max headers_max_fields min headers_min_fields stddev headers_stddev_fields stddev_pop headers_stddev_pop_fields stddev_samp headers_stddev_samp_fields sum headers_sum_fields var_pop headers_var_pop_fields var_samp headers_var_samp_fields variance headers_variance_fields","title":"headers_aggregate_fields"},{"location":"data/schema/#headers_avg_fields","text":"Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float","title":"headers_avg_fields"},{"location":"data/schema/#headers_max_fields","text":"Field Argument Type Description channels_cnt_all Int channels_cnt_period Int timeframe Int zones_cnt_all Int zones_cnt_period Int","title":"headers_max_fields"},{"location":"data/schema/#headers_min_fields","text":"Field Argument Type Description channels_cnt_all Int channels_cnt_period Int timeframe Int zones_cnt_all Int zones_cnt_period Int","title":"headers_min_fields"},{"location":"data/schema/#headers_stddev_fields","text":"Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float","title":"headers_stddev_fields"},{"location":"data/schema/#headers_stddev_pop_fields","text":"Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float","title":"headers_stddev_pop_fields"},{"location":"data/schema/#headers_stddev_samp_fields","text":"Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float","title":"headers_stddev_samp_fields"},{"location":"data/schema/#headers_sum_fields","text":"Field Argument Type Description channels_cnt_all Int channels_cnt_period Int timeframe Int zones_cnt_all Int zones_cnt_period Int","title":"headers_sum_fields"},{"location":"data/schema/#headers_var_pop_fields","text":"Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float","title":"headers_var_pop_fields"},{"location":"data/schema/#headers_var_samp_fields","text":"Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float","title":"headers_var_samp_fields"},{"location":"data/schema/#headers_variance_fields","text":"Field Argument Type Description channels_cnt_all Float channels_cnt_period Float timeframe Float zones_cnt_all Float zones_cnt_period Float","title":"headers_variance_fields"},{"location":"data/schema/#subscription_root","text":"Field Argument Type Description headers [ headers !]! distinct_on [ headers_select_column !] limit Int offset Int order_by [ headers_order_by !] where headers_bool_exp headers_aggregate headers_aggregate ! distinct_on [ headers_select_column !] limit Int offset Int order_by [ headers_order_by !] where headers_bool_exp headers_by_pk headers timeframe Int ! zones_graphs [ zones_graphs !]! distinct_on [ zones_graphs_select_column !] limit Int offset Int order_by [ zones_graphs_order_by !] where zones_graphs_bool_exp zones_graphs_aggregate zones_graphs_aggregate ! distinct_on [ zones_graphs_select_column !] limit Int offset Int order_by [ zones_graphs_order_by !] where zones_graphs_bool_exp zones_graphs_by_pk zones_graphs source String ! target String ! timeframe Int ! zones_stats [ zones_stats !]! distinct_on [ zones_stats_select_column !] limit Int offset Int order_by [ zones_stats_order_by !] where zones_stats_bool_exp zones_stats_aggregate zones_stats_aggregate ! distinct_on [ zones_stats_select_column !] limit Int offset Int order_by [ zones_stats_order_by !] where zones_stats_bool_exp zones_stats_by_pk zones_stats timeframe Int ! zone String !","title":"subscription_root"},{"location":"data/schema/#zones_graphs","text":"Field Argument Type Description source String ! target String ! timeframe Int !","title":"zones_graphs"},{"location":"data/schema/#zones_graphs_aggregate","text":"Field Argument Type Description aggregate zones_graphs_aggregate_fields nodes [ zones_graphs !]!","title":"zones_graphs_aggregate"},{"location":"data/schema/#zones_graphs_aggregate_fields","text":"Field Argument Type Description avg zones_graphs_avg_fields count Int columns [ zones_graphs_select_column !] distinct Boolean max zones_graphs_max_fields min zones_graphs_min_fields stddev zones_graphs_stddev_fields stddev_pop zones_graphs_stddev_pop_fields stddev_samp zones_graphs_stddev_samp_fields sum zones_graphs_sum_fields var_pop zones_graphs_var_pop_fields var_samp zones_graphs_var_samp_fields variance zones_graphs_variance_fields","title":"zones_graphs_aggregate_fields"},{"location":"data/schema/#zones_graphs_avg_fields","text":"Field Argument Type Description timeframe Float","title":"zones_graphs_avg_fields"},{"location":"data/schema/#zones_graphs_max_fields","text":"Field Argument Type Description source String target String timeframe Int","title":"zones_graphs_max_fields"},{"location":"data/schema/#zones_graphs_min_fields","text":"Field Argument Type Description source String target String timeframe Int","title":"zones_graphs_min_fields"},{"location":"data/schema/#zones_graphs_stddev_fields","text":"Field Argument Type Description timeframe Float","title":"zones_graphs_stddev_fields"},{"location":"data/schema/#zones_graphs_stddev_pop_fields","text":"Field Argument Type Description timeframe Float","title":"zones_graphs_stddev_pop_fields"},{"location":"data/schema/#zones_graphs_stddev_samp_fields","text":"Field Argument Type Description timeframe Float","title":"zones_graphs_stddev_samp_fields"},{"location":"data/schema/#zones_graphs_sum_fields","text":"Field Argument Type Description timeframe Int","title":"zones_graphs_sum_fields"},{"location":"data/schema/#zones_graphs_var_pop_fields","text":"Field Argument Type Description timeframe Float","title":"zones_graphs_var_pop_fields"},{"location":"data/schema/#zones_graphs_var_samp_fields","text":"Field Argument Type Description timeframe Float","title":"zones_graphs_var_samp_fields"},{"location":"data/schema/#zones_graphs_variance_fields","text":"Field Argument Type Description timeframe Float","title":"zones_graphs_variance_fields"},{"location":"data/schema/#zones_stats","text":"Field Argument Type Description channels_num Int ! chart jsonb ! path String ibc_percent Int ! ibc_tx_in Int ! ibc_tx_in_diff Int ! ibc_tx_in_rating Int ! ibc_tx_in_rating_diff Int ! ibc_tx_in_weight numeric ! ibc_tx_out Int ! ibc_tx_out_diff Int ! ibc_tx_out_rating Int ! ibc_tx_out_rating_diff Int ! ibc_tx_out_weight numeric ! timeframe Int ! total_ibc_txs Int ! total_ibc_txs_diff Int ! total_ibc_txs_rating Int ! total_ibc_txs_rating_diff Int ! total_ibc_txs_weight numeric ! total_txs Int ! total_txs_diff Int ! total_txs_rating Int ! total_txs_rating_diff Int ! total_txs_weight numeric ! zone String !","title":"zones_stats"},{"location":"data/schema/#zones_stats_aggregate","text":"Field Argument Type Description aggregate zones_stats_aggregate_fields nodes [ zones_stats !]!","title":"zones_stats_aggregate"},{"location":"data/schema/#zones_stats_aggregate_fields","text":"Field Argument Type Description avg zones_stats_avg_fields count Int columns [ zones_stats_select_column !] distinct Boolean max zones_stats_max_fields min zones_stats_min_fields stddev zones_stats_stddev_fields stddev_pop zones_stats_stddev_pop_fields stddev_samp zones_stats_stddev_samp_fields sum zones_stats_sum_fields var_pop zones_stats_var_pop_fields var_samp zones_stats_var_samp_fields variance zones_stats_variance_fields","title":"zones_stats_aggregate_fields"},{"location":"data/schema/#zones_stats_avg_fields","text":"Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float","title":"zones_stats_avg_fields"},{"location":"data/schema/#zones_stats_max_fields","text":"Field Argument Type Description channels_num Int ibc_percent Int ibc_tx_in Int ibc_tx_in_diff Int ibc_tx_in_rating Int ibc_tx_in_rating_diff Int ibc_tx_in_weight numeric ibc_tx_out Int ibc_tx_out_diff Int ibc_tx_out_rating Int ibc_tx_out_rating_diff Int ibc_tx_out_weight numeric timeframe Int total_ibc_txs Int total_ibc_txs_diff Int total_ibc_txs_rating Int total_ibc_txs_rating_diff Int total_ibc_txs_weight numeric total_txs Int total_txs_diff Int total_txs_rating Int total_txs_rating_diff Int total_txs_weight numeric zone String","title":"zones_stats_max_fields"},{"location":"data/schema/#zones_stats_min_fields","text":"Field Argument Type Description channels_num Int ibc_percent Int ibc_tx_in Int ibc_tx_in_diff Int ibc_tx_in_rating Int ibc_tx_in_rating_diff Int ibc_tx_in_weight numeric ibc_tx_out Int ibc_tx_out_diff Int ibc_tx_out_rating Int ibc_tx_out_rating_diff Int ibc_tx_out_weight numeric timeframe Int total_ibc_txs Int total_ibc_txs_diff Int total_ibc_txs_rating Int total_ibc_txs_rating_diff Int total_ibc_txs_weight numeric total_txs Int total_txs_diff Int total_txs_rating Int total_txs_rating_diff Int total_txs_weight numeric zone String","title":"zones_stats_min_fields"},{"location":"data/schema/#zones_stats_stddev_fields","text":"Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float","title":"zones_stats_stddev_fields"},{"location":"data/schema/#zones_stats_stddev_pop_fields","text":"Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float","title":"zones_stats_stddev_pop_fields"},{"location":"data/schema/#zones_stats_stddev_samp_fields","text":"Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float","title":"zones_stats_stddev_samp_fields"},{"location":"data/schema/#zones_stats_sum_fields","text":"Field Argument Type Description channels_num Int ibc_percent Int ibc_tx_in Int ibc_tx_in_diff Int ibc_tx_in_rating Int ibc_tx_in_rating_diff Int ibc_tx_in_weight numeric ibc_tx_out Int ibc_tx_out_diff Int ibc_tx_out_rating Int ibc_tx_out_rating_diff Int ibc_tx_out_weight numeric timeframe Int total_ibc_txs Int total_ibc_txs_diff Int total_ibc_txs_rating Int total_ibc_txs_rating_diff Int total_ibc_txs_weight numeric total_txs Int total_txs_diff Int total_txs_rating Int total_txs_rating_diff Int total_txs_weight numeric","title":"zones_stats_sum_fields"},{"location":"data/schema/#zones_stats_var_pop_fields","text":"Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float","title":"zones_stats_var_pop_fields"},{"location":"data/schema/#zones_stats_var_samp_fields","text":"Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float","title":"zones_stats_var_samp_fields"},{"location":"data/schema/#zones_stats_variance_fields","text":"Field Argument Type Description channels_num Float ibc_percent Float ibc_tx_in Float ibc_tx_in_diff Float ibc_tx_in_rating Float ibc_tx_in_rating_diff Float ibc_tx_in_weight Float ibc_tx_out Float ibc_tx_out_diff Float ibc_tx_out_rating Float ibc_tx_out_rating_diff Float ibc_tx_out_weight Float timeframe Float total_ibc_txs Float total_ibc_txs_diff Float total_ibc_txs_rating Float total_ibc_txs_rating_diff Float total_ibc_txs_weight Float total_txs Float total_txs_diff Float total_txs_rating Float total_txs_rating_diff Float total_txs_weight Float","title":"zones_stats_variance_fields"},{"location":"data/schema/#inputs","text":"","title":"Inputs"},{"location":"data/schema/#int_comparison_exp","text":"Field Type Description _eq Int _gt Int _gte Int _in [ Int !] _is_null Boolean _lt Int _lte Int _neq Int _nin [ Int !]","title":"Int_comparison_exp"},{"location":"data/schema/#string_comparison_exp","text":"Field Type Description _eq String _gt String _gte String _ilike String _in [ String !] _is_null Boolean _like String _lt String _lte String _neq String _nilike String _nin [ String !] _nlike String _nsimilar String _similar String","title":"String_comparison_exp"},{"location":"data/schema/#headers_aggregate_order_by","text":"Field Type Description avg headers_avg_order_by count order_by max headers_max_order_by min headers_min_order_by stddev headers_stddev_order_by stddev_pop headers_stddev_pop_order_by stddev_samp headers_stddev_samp_order_by sum headers_sum_order_by var_pop headers_var_pop_order_by var_samp headers_var_samp_order_by variance headers_variance_order_by","title":"headers_aggregate_order_by"},{"location":"data/schema/#headers_avg_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_avg_order_by"},{"location":"data/schema/#headers_bool_exp","text":"Field Type Description _and [ headers_bool_exp ] _not headers_bool_exp _or [ headers_bool_exp ] channels_cnt_all Int_comparison_exp channels_cnt_period Int_comparison_exp chart jsonb_comparison_exp timeframe Int_comparison_exp top_zone_pair jsonb_comparison_exp zones_cnt_all Int_comparison_exp zones_cnt_period Int_comparison_exp","title":"headers_bool_exp"},{"location":"data/schema/#headers_max_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_max_order_by"},{"location":"data/schema/#headers_min_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_min_order_by"},{"location":"data/schema/#headers_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by chart order_by timeframe order_by top_zone_pair order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_order_by"},{"location":"data/schema/#headers_pk_columns_input","text":"Field Type Description timeframe Int !","title":"headers_pk_columns_input"},{"location":"data/schema/#headers_stddev_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_stddev_order_by"},{"location":"data/schema/#headers_stddev_pop_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_stddev_pop_order_by"},{"location":"data/schema/#headers_stddev_samp_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_stddev_samp_order_by"},{"location":"data/schema/#headers_sum_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_sum_order_by"},{"location":"data/schema/#headers_var_pop_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_var_pop_order_by"},{"location":"data/schema/#headers_var_samp_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_var_samp_order_by"},{"location":"data/schema/#headers_variance_order_by","text":"Field Type Description channels_cnt_all order_by channels_cnt_period order_by timeframe order_by zones_cnt_all order_by zones_cnt_period order_by","title":"headers_variance_order_by"},{"location":"data/schema/#jsonb_comparison_exp","text":"Field Type Description _contained_in jsonb _contains jsonb _eq jsonb _gt jsonb _gte jsonb _has_key String _has_keys_all [ String !] _has_keys_any [ String !] _in [ jsonb !] _is_null Boolean _lt jsonb _lte jsonb _neq jsonb _nin [ jsonb !]","title":"jsonb_comparison_exp"},{"location":"data/schema/#numeric_comparison_exp","text":"Field Type Description _eq numeric _gt numeric _gte numeric _in [ numeric !] _is_null Boolean _lt numeric _lte numeric _neq numeric _nin [ numeric !]","title":"numeric_comparison_exp"},{"location":"data/schema/#zones_graphs_aggregate_order_by","text":"Field Type Description avg zones_graphs_avg_order_by count order_by max zones_graphs_max_order_by min zones_graphs_min_order_by stddev zones_graphs_stddev_order_by stddev_pop zones_graphs_stddev_pop_order_by stddev_samp zones_graphs_stddev_samp_order_by sum zones_graphs_sum_order_by var_pop zones_graphs_var_pop_order_by var_samp zones_graphs_var_samp_order_by variance zones_graphs_variance_order_by","title":"zones_graphs_aggregate_order_by"},{"location":"data/schema/#zones_graphs_avg_order_by","text":"Field Type Description timeframe order_by","title":"zones_graphs_avg_order_by"},{"location":"data/schema/#zones_graphs_bool_exp","text":"Field Type Description _and [ zones_graphs_bool_exp ] _not zones_graphs_bool_exp _or [ zones_graphs_bool_exp ] source String_comparison_exp target String_comparison_exp timeframe Int_comparison_exp","title":"zones_graphs_bool_exp"},{"location":"data/schema/#zones_graphs_max_order_by","text":"Field Type Description source order_by target order_by timeframe order_by","title":"zones_graphs_max_order_by"},{"location":"data/schema/#zones_graphs_min_order_by","text":"Field Type Description source order_by target order_by timeframe order_by","title":"zones_graphs_min_order_by"},{"location":"data/schema/#zones_graphs_order_by","text":"Field Type Description source order_by target order_by timeframe order_by","title":"zones_graphs_order_by"},{"location":"data/schema/#zones_graphs_pk_columns_input","text":"Field Type Description source String ! target String ! timeframe Int !","title":"zones_graphs_pk_columns_input"},{"location":"data/schema/#zones_graphs_stddev_order_by","text":"Field Type Description timeframe order_by","title":"zones_graphs_stddev_order_by"},{"location":"data/schema/#zones_graphs_stddev_pop_order_by","text":"Field Type Description timeframe order_by","title":"zones_graphs_stddev_pop_order_by"},{"location":"data/schema/#zones_graphs_stddev_samp_order_by","text":"Field Type Description timeframe order_by","title":"zones_graphs_stddev_samp_order_by"},{"location":"data/schema/#zones_graphs_sum_order_by","text":"Field Type Description timeframe order_by","title":"zones_graphs_sum_order_by"},{"location":"data/schema/#zones_graphs_var_pop_order_by","text":"Field Type Description timeframe order_by","title":"zones_graphs_var_pop_order_by"},{"location":"data/schema/#zones_graphs_var_samp_order_by","text":"Field Type Description timeframe order_by","title":"zones_graphs_var_samp_order_by"},{"location":"data/schema/#zones_graphs_variance_order_by","text":"Field Type Description timeframe order_by","title":"zones_graphs_variance_order_by"},{"location":"data/schema/#zones_stats_aggregate_order_by","text":"Field Type Description avg zones_stats_avg_order_by count order_by max zones_stats_max_order_by min zones_stats_min_order_by stddev zones_stats_stddev_order_by stddev_pop zones_stats_stddev_pop_order_by stddev_samp zones_stats_stddev_samp_order_by sum zones_stats_sum_order_by var_pop zones_stats_var_pop_order_by var_samp zones_stats_var_samp_order_by variance zones_stats_variance_order_by","title":"zones_stats_aggregate_order_by"},{"location":"data/schema/#zones_stats_avg_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by","title":"zones_stats_avg_order_by"},{"location":"data/schema/#zones_stats_bool_exp","text":"Field Type Description _and [ zones_stats_bool_exp ] _not zones_stats_bool_exp _or [ zones_stats_bool_exp ] channels_num Int_comparison_exp chart jsonb_comparison_exp ibc_percent Int_comparison_exp ibc_tx_in Int_comparison_exp ibc_tx_in_diff Int_comparison_exp ibc_tx_in_rating Int_comparison_exp ibc_tx_in_rating_diff Int_comparison_exp ibc_tx_in_weight numeric_comparison_exp ibc_tx_out Int_comparison_exp ibc_tx_out_diff Int_comparison_exp ibc_tx_out_rating Int_comparison_exp ibc_tx_out_rating_diff Int_comparison_exp ibc_tx_out_weight numeric_comparison_exp timeframe Int_comparison_exp total_ibc_txs Int_comparison_exp total_ibc_txs_diff Int_comparison_exp total_ibc_txs_rating Int_comparison_exp total_ibc_txs_rating_diff Int_comparison_exp total_ibc_txs_weight numeric_comparison_exp total_txs Int_comparison_exp total_txs_diff Int_comparison_exp total_txs_rating Int_comparison_exp total_txs_rating_diff Int_comparison_exp total_txs_weight numeric_comparison_exp zone String_comparison_exp","title":"zones_stats_bool_exp"},{"location":"data/schema/#zones_stats_max_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zone order_by","title":"zones_stats_max_order_by"},{"location":"data/schema/#zones_stats_min_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zone order_by","title":"zones_stats_min_order_by"},{"location":"data/schema/#zones_stats_order_by","text":"Field Type Description channels_num order_by chart order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by zone order_by","title":"zones_stats_order_by"},{"location":"data/schema/#zones_stats_pk_columns_input","text":"Field Type Description timeframe Int ! zone String !","title":"zones_stats_pk_columns_input"},{"location":"data/schema/#zones_stats_stddev_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by","title":"zones_stats_stddev_order_by"},{"location":"data/schema/#zones_stats_stddev_pop_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by","title":"zones_stats_stddev_pop_order_by"},{"location":"data/schema/#zones_stats_stddev_samp_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by","title":"zones_stats_stddev_samp_order_by"},{"location":"data/schema/#zones_stats_sum_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by","title":"zones_stats_sum_order_by"},{"location":"data/schema/#zones_stats_var_pop_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by","title":"zones_stats_var_pop_order_by"},{"location":"data/schema/#zones_stats_var_samp_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by","title":"zones_stats_var_samp_order_by"},{"location":"data/schema/#zones_stats_variance_order_by","text":"Field Type Description channels_num order_by ibc_percent order_by ibc_tx_in order_by ibc_tx_in_diff order_by ibc_tx_in_rating order_by ibc_tx_in_rating_diff order_by ibc_tx_in_weight order_by ibc_tx_out order_by ibc_tx_out_diff order_by ibc_tx_out_rating order_by ibc_tx_out_rating_diff order_by ibc_tx_out_weight order_by timeframe order_by total_ibc_txs order_by total_ibc_txs_diff order_by total_ibc_txs_rating order_by total_ibc_txs_rating_diff order_by total_ibc_txs_weight order_by total_txs order_by total_txs_diff order_by total_txs_rating order_by total_txs_rating_diff order_by total_txs_weight order_by","title":"zones_stats_variance_order_by"},{"location":"data/schema/#enums","text":"","title":"Enums"},{"location":"data/schema/#headers_select_column","text":"Value Description channels_cnt_all channels_cnt_period chart timeframe top_zone_pair zones_cnt_all zones_cnt_period","title":"headers_select_column"},{"location":"data/schema/#order_by","text":"Value Description asc asc_nulls_first asc_nulls_last desc desc_nulls_first desc_nulls_last","title":"order_by"},{"location":"data/schema/#zones_graphs_select_column","text":"Value Description source target timeframe","title":"zones_graphs_select_column"},{"location":"data/schema/#zones_stats_select_column","text":"Value Description channels_num chart ibc_percent ibc_tx_in ibc_tx_in_diff ibc_tx_in_rating ibc_tx_in_rating_diff ibc_tx_in_weight ibc_tx_out ibc_tx_out_diff ibc_tx_out_rating ibc_tx_out_rating_diff ibc_tx_out_weight timeframe total_ibc_txs total_ibc_txs_diff total_ibc_txs_rating total_ibc_txs_rating_diff total_ibc_txs_weight total_txs total_txs_diff total_txs_rating total_txs_rating_diff total_txs_weight zone","title":"zones_stats_select_column"},{"location":"data/schema/#scalars","text":"","title":"Scalars"},{"location":"data/schema/#boolean","text":"The Boolean scalar type represents true or false .","title":"Boolean"},{"location":"data/schema/#float","text":"The Float scalar type represents signed double-precision fractional values as specified by IEEE 754 .","title":"Float"},{"location":"data/schema/#int","text":"The Int scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.","title":"Int"},{"location":"data/schema/#string","text":"The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.","title":"String"},{"location":"data/schema/#jsonb","text":"","title":"jsonb"},{"location":"data/schema/#numeric","text":"","title":"numeric"}]}